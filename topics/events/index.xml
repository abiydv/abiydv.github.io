<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>events on @abiydv</title>
    <link>https://abiydv.github.io/topics/events/</link>
    <description>Recent content in events on @abiydv</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://abiydv.github.io/topics/events/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Amazon MQ</title>
      <link>https://abiydv.github.io/notes/aws/mq/</link>
      <pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://abiydv.github.io/notes/aws/mq/</guid>
      <description>Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ
Amazon MQ supports industry standard APIs such as JMS and NMS, and protocols for messaging, including AMQP, STOMP, MQTT, and WebSocket.
two types of broker storage – durability optimized (EFS), and throughput optimized (EBS).
For high volume applications, throughput optimized storage is better, can provide the required throughput and optimize costs by reducing the number of brokers required.</description>
    </item>
    
    <item>
      <title>AWS EventBridge</title>
      <link>https://abiydv.github.io/notes/aws/eventbridge/</link>
      <pubDate>Tue, 13 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://abiydv.github.io/notes/aws/eventbridge/</guid>
      <description>Formerly called CloudWatch Events</description>
    </item>
    
    <item>
      <title>AWS Simple Notification Service (SNS)</title>
      <link>https://abiydv.github.io/notes/aws/sns/</link>
      <pubDate>Tue, 13 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://abiydv.github.io/notes/aws/sns/</guid>
      <description>Scope Region
Features Apps PUSH messages to a topic.
You can subscribe a queue (SQS) or Lambda to a topic cross-region, cross-account. When doing so it is important to use the global condition key SourceArn or SourceAccount in queue resource policy to restrict which topic can publish to the queue.
Often the first building block of a fan out architectural pattern.
graph LR src(source) --&gt; sns sns(sns use1) --&gt; q1(sqs1 usw1) --&gt; app1 sns --&gt; q2(sqs2 use1) --&gt; app2 sns --&gt; q3(sqs3 euw1) --&gt; app3 </description>
    </item>
    
    <item>
      <title>AWS Simple Queue Service (SQS)</title>
      <link>https://abiydv.github.io/notes/aws/sqs/</link>
      <pubDate>Tue, 13 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://abiydv.github.io/notes/aws/sqs/</guid>
      <description>Scope Region
Features Apps PULL messages from a queue, process it and DELETE it. If the message is not deleted by a consumer, it is returned back to the queue after visibility timeout expires.
FIFO preserves order and ensure once only delivery. Also deduplication. Visibility timeout Retention period - max 14 days, by default 4 days. Delivery delay Redrive allow policy Redrive Move messages from DLQ to the main queue for re-preocessing.</description>
    </item>
    
  </channel>
</rss>
